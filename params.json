{"name":"Asymptix Framework","tagline":"The Fast and Easy PHP Framework for Rapid Development","body":"# Asymptix PHP Framework\r\n\r\nThe Fast and Easy PHP Framework for Rapid Development.\r\n\r\nDIRECTORY STRUCTURE\r\n---\r\n\r\n```\r\nclasses/             example project classes\r\nclasses/db/          example DB beans classes\r\nconf/                configuration files\r\ncontrollers/         example controllers\r\nframework/           core framework code\r\nmodules/             example modules\r\ntemplates/           example templates\r\ntests/               tests of the core framework code\r\n```\r\n\r\nREQUIREMENTS\r\n---\r\n\r\nThe minimum requirement by Asymptix Framework is that your Web server supports PHP 5.3.\r\n\r\nINSTALLATION\r\n---\r\n\r\nTo install basic framework libs use [Composer](https://getcomposer.org/) `composer install` command with `composer.json` configuration file (current version doesn't support [Packagist](https://packagist.org/) yet and uses SVN for load just subfolder of the repository directly from GitHub. This will be improved in future).\r\n\r\n```js\r\n{\r\n\t\"repositories\": [\r\n        {\r\n\t\t\t\"type\": \"package\",\r\n            \"package\": {\r\n                \"name\": \"asymptix/framework\",\r\n                \"version\": \"dev-master\",\r\n                \"source\": {\r\n                    \"type\": \"svn\",\r\n                    \"url\": \"https://github.com/Asymptix/Framework\",\r\n                    \"reference\": \"trunk/framework\"\r\n                },\r\n\t\t\t\t\"require\": {\r\n\t\t\t\t\t\"php\": \">=5.3.0\"\r\n\t\t\t\t},\r\n\t\t\t\t\"autoload\": {\r\n\t\t\t\t\t\"psr-4\": {\r\n\t\t\t\t\t\t\"Asymptix\\\\\": \"\"\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            }\r\n        }\r\n    ],\r\n\t\"minimum-stability\": \"dev\",\r\n    \"require\": {\r\n        \"php\": \">=5.3.0\",\r\n\t\t\"asymptix/framework\": \">=2.0.0\"\r\n    }\r\n}\r\n```\r\n\r\nAfter [Composer](https://getcomposer.org/) installation you just need require autoload file with the next command:\r\n\r\n```php\r\nrequire_once(\"./vendor/autoload.php\");\r\n```\r\n\r\nLIST OF GLOBAL VARIABLES\r\n---\r\n\r\n### Basic static settings\r\n* __~~$\\_CONFIG~~__ - List of pairs key → value for global system configuration, like DB connections parameters, site URL, admin e-mail, etc. May be in old versions of the framework, now changed on __Config__ object and partly replaced with __$\\_SETTINGS__ variable _(deprecated)_.\r\n* __$\\_SETTINGS__ -\tList of pairs key → value for global system settings. Can be taken from the database or manually created.\r\n* __$\\_MENU__ -\tMulti-level array with main menu structure. Can be as global variable or as static property of the __Menu__ class.\r\n* __~~$\\_PATH~~__ -\tOld version to set absolute path to the project's folder _(deprecated)_.\r\n\r\n### Session variables\r\n* __$\\_USER__ - Variable stores serialized object of the __User__ class or simple array with user data.\r\n\r\n### Pages view and representation\r\n* __$\\_ROUTE__ - Global instance of the __Route__ class with public properties controller, action and id - represents current page URL or rules to display this page.\r\n* __$\\_TPL__\t- String variable with a path to the needed template of the page.\r\n* __$\\_BREADCRUMBS__ - Array with page breadcrumbs data.\r\n* __$\\_JS__ - Controller local array with paths to needed for the current page JavaScript files.\r\n* __$\\_CSS__\t- Controller local array with paths to needed for the current page CSS files.\r\n* __$\\_LANG__ - `Language` object stored in session and represents current selected language in localization functionality.\r\n\r\n### Form submission data\r\n* __$\\_FIELDS__ - List with pairs key → value merged from __$\\_REQUEST__ (__$\\_POST__ and __$\\_GET__) also used in form output if some data is invalid. Fields values may be changed on the way from data receiving before output in form fields.\r\n* __$\\_ARGS__ -\tList with pairs key → value from __$\\_GET__ string, so it's not a copy of __$\\_GET__ but received from URL string data after ‘?’ sign.\r\n* __$\\_ERRORS__\tList of the errors for invalid or notable fields after validation process or some notification process.\r\n* __$\\_MESSAGES__\tList of messages shown after form submission if some errors or notifications. Not connected to fields but common for all forms.\r\n* __$\\_FILTER__\tList of filters (data selection rules) for some forms.\r\n\r\n### Email functionality\r\n* __$\\_EMAIL__ - Uses only in e-mail templates as e-mail inline parameters list (e.g. username, password or product name and price in e-mail templates).\r\n\r\nIDENTITY\r\n---\r\n\r\nIt's highly recommended to send header information with framework signature for better recognition with parsers and analyzers (like [Wappalyzer](https://github.com/AliasIO/Wappalyzer)).\r\nYou may see example in the __index.php__ file:\r\n\r\n```php\r\nheader('X-Powered-By: Asymptix PHP Framework, PHP/' . phpversion());\r\n```\r\n\r\nWORK WITH DATABASE (ORM)\r\n---\r\n\r\nYou can create new __DBObject__:\r\n\r\n```php\r\n$user = new User();\r\n```\r\n\r\nor you can get __DBObject__ with __DBSelector__:\r\n\r\n```php\r\n$userSelector = new DBSelector(new User());\r\n$user = $userSelector->selectDBObjectById($userId);\r\n```\r\n\r\nYou can manipulate with DataBase records this way:\r\n\r\n```php\r\n// Save (insert/update) record\r\n$user->email = \"dmytro@asymptix.com\";\r\n$user->save();\r\n```\r\n\r\nIf ID of the __DBObject__ is empty - then __INSERT__ SQL instruction will be executed, if not empty - then __UPDATE__.\r\n\r\n```php\r\n// Delete record\r\n$user->delete();\r\n```\r\n\r\nYou can also use this syntax for the fast selection queries:\r\n\r\n```php\r\n// Init object\r\n$site = new Site();\r\n$sitesList = $site->select(array('status' => \"active\"))\r\n                  ->order(array('title' => \"ASC\"))\r\n                  ->limit(10)\r\n                  ->go();\r\n```\r\n\r\nThis query will be executed with using of Prepared Statement. Order of methods calls is free but go() - must be the last call in this order.\r\n\r\nLOG WITH OutputStream\r\n---\r\n\r\n```php\r\nrequire_once(\"./core/OutputStream.php\");\r\n\r\nOutputStream::start();\r\n\r\nOutputStream::output(\"Simpel text \\n\");\r\nOutputStream::line(\"Simpel text line\");\r\nOutputStream::line(\"Simpel text line\");\r\n\r\nOutputStream::line();\r\n\r\nOutputStream::log(\"Simple default log\");\r\nOutputStream::log(\"Simple log with time format\", \"\\(H:i:s\\)\");\r\nOutputStream::log(\"Simple log with time {{time}} label\");\r\nOutputStream::log(\"Simple log with time {{time}} label and format\", \"\\(H:i:s\\)\");\r\nOutputStream::log(\"Log with few time {{time}} labels {{time}}\");\r\n\r\nOutputStream::line();\r\n\r\nOutputStream::msg(OutputStream::MSG_INFO, \"Info message\");\r\nOutputStream::msg(OutputStream::MSG_DEBUG, \"Debug message with time format\", \"\\(H:i:s\\)\");\r\nOutputStream::msg(OutputStream::MSG_SUCCESS, \"Success message with time {{time}} label\");\r\nOutputStream::msg(OutputStream::MSG_WARNING, \"Warning message with time {{time}} label and format\", \"\\(H:i:s\\)\");\r\nOutputStream::msg(OutputStream::MSG_ERROR, \"Default Error message\");\r\n\r\nOutputStream::close();\r\n```\r\n\r\nCopyright (c) 2015 Asymptix.\r\n","google":"UA-68594857-2","note":"Don't delete this file! It's used internally to help with page regeneration."}