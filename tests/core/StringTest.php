<?php

use Asymptix\core\String;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-08-03 at 19:26:54.
 */
class StringTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var String
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new String;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {}

    /**
     * Generated from @assert ("test") == "Test".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst() {
        $this->assertEquals(
                "Test"
                , String::upperCaseFirst("test")
        );
    }

    /**
     * Generated from @assert ("Test") == "Test".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst2() {
        $this->assertEquals(
                "Test"
                , String::upperCaseFirst("Test")
        );
    }

    /**
     * Generated from @assert ("тест") == "Тест".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst3() {
        $this->assertEquals(
                "Тест"
                , String::upperCaseFirst("тест")
        );
    }

    /**
     * Generated from @assert ("Тест") == "Тест".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst4() {
        $this->assertEquals(
                "Тест"
                , String::upperCaseFirst("Тест")
        );
    }

    /**
     * Generated from @assert ("test case") == "Test case".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst5() {
        $this->assertEquals(
                "Test case"
                , String::upperCaseFirst("test case")
        );
    }

    /**
     * Generated from @assert ("Test case") == "Test case".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst6() {
        $this->assertEquals(
                "Test case"
                , String::upperCaseFirst("Test case")
        );
    }

    /**
     * Generated from @assert ("тест кейс") == "Тест кейс".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst7() {
        $this->assertEquals(
                "Тест кейс"
                , String::upperCaseFirst("тест кейс")
        );
    }

    /**
     * Generated from @assert ("Тест кейс") == "Тест кейс".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst8() {
        $this->assertEquals(
                "Тест кейс"
                , String::upperCaseFirst("Тест кейс")
        );
    }

    /**
     * Generated from @assert ("test case") != "test case".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst9() {
        $this->assertNotEquals(
                "test case"
                , String::upperCaseFirst("test case")
        );
    }

    /**
     * Generated from @assert ("Test case") != "test case".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst10() {
        $this->assertNotEquals(
                "test case"
                , String::upperCaseFirst("Test case")
        );
    }

    /**
     * Generated from @assert ("тест кейс") != "тест кейс".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst11() {
        $this->assertNotEquals(
                "тест кейс"
                , String::upperCaseFirst("тест кейс")
        );
    }

    /**
     * Generated from @assert ("Тест кейс") != "тест кейс".
     *
     * @covers \Asymptix\core\String::upperCaseFirst
     */
    public function testUpperCaseFirst12() {
        $this->assertNotEquals(
                "тест кейс"
                , String::upperCaseFirst("Тест кейс")
        );
    }

    /**
     * @covers \Asymptix\core\String::isInstanceOf
     * @todo   Implement testIsInstanceOf().
     */
    public function testIsInstanceOf() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Asymptix\core\String::lowerCaseFirst
     * @todo   Implement testLowerCaseFirst().
     */
    public function testLowerCaseFirst() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Asymptix\core\String::upperCaseWords
     * @todo   Implement testUpperCaseWords().
     */
    public function testUpperCaseWords() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Asymptix\core\String::upperCase
     * @todo   Implement testUpperCase().
     */
    public function testUpperCase() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers \Asymptix\core\String::lowerCase
     * @todo   Implement testLowerCase().
     */
    public function testLowerCase() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
